{"attributes": {"fullName": "qx.ui.mobile.container.Drawer", "packageName": "qx.ui.mobile.container", "type": "class", "name": "Drawer", "superClass": "qx.ui.mobile.container.Composite"}, "type": "class", "children": [{"attributes": {"text": "<p>Creates a drawer widget inside the given parent widget. The parent widget can\nbe assigned as a constructor argument. If no parent is set, the application&#8217;s\nroot will be assumed as parent. A drawer widget can be assigned to left, right,\ntop or bottom edge of its parent by property <code>orientation</code>. The drawer floats\nin on <code>show()</code> and floats out on <code>hide()</code>. Additionally the drawer is shown by\nswiping in reverse direction on the parent edge to where the drawer is placed\nto: Orientation: <code>left</code>, Swipe: <code>right</code> on parents edge: Drawer is shown etc.\nThe drawer is hidden when user touches the parent area outside of the drawer.\nThis behaviour can be deactivated by the property <code>hideOnParentTouch</code>.</p>\n\n<pre class=\"javascript\">\n\n var drawer = new qx.ui.mobile.container.Drawer();\n drawer.setOrientation(\"right\");\n drawer.setTouchOffset(100);\n\n var button = new qx.ui.mobile.form.Button(\"A Button\");\n drawer.add(button);\n</pre>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 60, "isCtor": true, "overriddenFrom": "qx.ui.mobile.container.Composite", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "optional": true, "name": "parent"}, "type": "param", "children": [{"attributes": {"text": "<p>The widget to which the drawer should be added, if null it is added to app root.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.mobile.container.Composite"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "layout"}, "type": "param", "children": [{"attributes": {"text": "<p>The layout that should be used for this container.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.mobile.layout.Abstract"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "resize"}, "type": "event", "children": [{"attributes": {"text": "<p>Fired when the drawer changes its size.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "resize"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #height}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "resize"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #width}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 199, "name": "_applyOrientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.mobile.container.Drawer#orientation"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 214, "name": "_applyPositionZ"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.mobile.container.Drawer#positionZ"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>positionZ</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #positionZ}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 234, "name": "_applySize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.mobile.container.Drawer#height"}, "type": "entry"}, {"attributes": {"applies": "qx.ui.mobile.container.Drawer#width"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the properties <code>height</code> and <code>width</code>.</p>\n\n<p>For further details take a look at the property definitions: {@link #height} and {@link #width}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 247, "name": "_applyTransitionDuration"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "qx.ui.mobile.container.Drawer#transitionDuration"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>transitionDuration</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #transitionDuration}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 388, "name": "_disableTransition"}, "type": "method", "children": [{"attributes": {"text": "<p>Disables the transition on this drawer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 367, "name": "_enableTransition"}, "type": "method", "children": [{"attributes": {"text": "<p>Enables the transition on this drawer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 447, "name": "_onParentSwipe"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "evt"}, "type": "param", "children": [{"attributes": {"text": "<p>Handled touch event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.module.event.Touch"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handles a swipe on layout parent.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 419, "name": "_onParentTouchStart"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "evt"}, "type": "param", "children": [{"attributes": {"text": "<p>Handled touch event.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.module.event.Touch"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Handles a touch on application&#8217;s root.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 310, "name": "_toggleParentBlockedState"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the blocked state of this drawer&#8217;s parent.\nBlocked means that no pointer events are received anymore.</p>"}, "type": "desc"}]}, {"attributes": {"line": 343, "name": "forceHide"}, "type": "method", "children": [{"attributes": {"text": "<p>Strict way to hide this drawer. Removes the blocker from the parent,\nand hides the drawer without any animation. Should be called when drawer&#8217;s\nparent is animated and drawer should hide immediately.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getHeight", "fromProperty": "height"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>height</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #height}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>height</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>hideOnParentTouch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>hideOnParentTouch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPositionZ", "fromProperty": "positionZ"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>positionZ</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #positionZ}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>positionZ</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTouchOffset", "fromProperty": "touchOffset"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>touchOffset</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #touchOffset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>touchOffset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTransitionDuration", "fromProperty": "transitionDuration"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>transitionDuration</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #transitionDuration}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>transitionDuration</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getWidth", "fromProperty": "width"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>width</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #width}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>width</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 318, "overriddenFrom": "qx.ui.mobile.core.Widget", "name": "hide"}, "type": "method", "children": [{"attributes": {"text": "<p>Hides the drawer.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "initHeight", "fromProperty": "height"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>height</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>height</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #height}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>hideOnParentTouch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>hideOnParentTouch</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>orientation</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPositionZ", "fromProperty": "positionZ"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>positionZ</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>positionZ</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #positionZ}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTouchOffset", "fromProperty": "touchOffset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>touchOffset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>touchOffset</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #touchOffset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTransitionDuration", "fromProperty": "transitionDuration"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>transitionDuration</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>transitionDuration</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #transitionDuration}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initWidth", "fromProperty": "width"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>width</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>width</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #width}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.ui.mobile.core.Widget", "line": 359, "overriddenFrom": "qx.ui.mobile.core.Widget", "name": "isHidden"}, "type": "method"}, {"attributes": {"name": "isHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>hideOnParentTouch</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetHeight", "fromProperty": "height"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>height</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #height}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>hideOnParentTouch</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>orientation</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetPositionZ", "fromProperty": "positionZ"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>positionZ</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #positionZ}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTouchOffset", "fromProperty": "touchOffset"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>touchOffset</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #touchOffset}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTransitionDuration", "fromProperty": "transitionDuration"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>transitionDuration</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #transitionDuration}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetWidth", "fromProperty": "width"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>width</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #width}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setHeight", "fromProperty": "height"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>height</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>height</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #height}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>hideOnParentTouch</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>hideOnParentTouch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPositionZ", "fromProperty": "positionZ"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>positionZ</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>positionZ</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #positionZ}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTouchOffset", "fromProperty": "touchOffset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>touchOffset</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>touchOffset</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #touchOffset}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTransitionDuration", "fromProperty": "transitionDuration"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>transitionDuration</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>transitionDuration</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #transitionDuration}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setWidth", "fromProperty": "width"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>width</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>width</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #width}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 255, "overriddenFrom": "qx.ui.mobile.core.Widget", "name": "show"}, "type": "method", "children": [{"attributes": {"text": "<p>Shows the drawer.</p>"}, "type": "desc"}]}, {"attributes": {"name": "toggleHideOnParentTouch", "fromProperty": "hideOnParentTouch"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>hideOnParentTouch</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #hideOnParentTouch}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 404, "name": "toggleVisibility"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggle the visibility of the drawer.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new visibility state.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "defaultCssClass", "docFrom": "qx.ui.mobile.core.Widget", "defaultValue": "\"drawer\"", "refine": "true", "propertyType": "new", "overriddenFrom": "qx.ui.mobile.core.Widget"}, "type": "property"}, {"attributes": {"name": "height", "defaultValue": "300", "event": "resize", "propertyType": "new", "apply": "_applySize", "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The height of the drawer. Only relevant if orientation is <code>top</code> or <code>bottom</code>.</p>"}, "type": "desc"}]}, {"attributes": {"defaultValue": "true", "propertyType": "new", "check": "Boolean", "name": "hideOnParentTouch"}, "type": "property", "children": [{"attributes": {"text": "<p>Indicates whether the drawer should hide when the parent area of it is touched.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyOrientation", "defaultValue": "\"left\"", "propertyType": "new", "check": "String", "name": "orientation"}, "type": "property", "children": [{"attributes": {"text": "<p>Property for setting the orientation of the drawer.\nAllowed values are: <code>left</code>,<code>right</code>,<code>top</code>,<code>bottom</code></p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyPositionZ", "defaultValue": "\"above\"", "propertyType": "new", "name": "positionZ", "possibleValues": "\"above\",\"below\""}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the drawer zIndex position relative to its parent.</p>"}, "type": "desc"}]}, {"attributes": {"defaultValue": "20", "propertyType": "new", "check": "Integer", "name": "touchOffset"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the size of the touching area, where the drawer reacts on swipes for opening itself.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_applyTransitionDuration", "defaultValue": "500", "propertyType": "new", "check": "Integer", "name": "transitionDuration"}, "type": "property", "children": [{"attributes": {"text": "<p>The duration time of the transition between shown/hidden state in ms.</p>"}, "type": "desc"}]}, {"attributes": {"name": "width", "defaultValue": "300", "event": "resize", "propertyType": "new", "apply": "_applySize", "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>The width of the drawer. Only relevant if orientation is <code>left</code> or <code>right</code>.</p>"}, "type": "desc"}]}]}]}